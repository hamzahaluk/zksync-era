#!/usr/bin/env bash
set -eo pipefail

# Constants
LOCAL_DIR="$HOME/.local/"
BIN_DIR="$LOCAL_DIR/bin"
PREREQUISITES=(cargo git)
BINS=(zkstack)

main() {
  parse_args "$@"
  display_banner
  check_prerequisites
  mkdir -p "$BIN_DIR"

  if [ -n "$ZKSTACKUP_PATH" ]; then
    install_local
  else
    install_from_repo
  fi

  add_bin_folder_to_path

  for bin in "${BINS[@]}"; do
    success "Installed $bin to $BIN_DIR/$bin"
  done
}

check_prerequisites() {
  say "Checking prerequisites..."
  local missing=()
  for prerequisite in "${PREREQUISITES[@]}"; do
    if ! command -v "$prerequisite" &>/dev/null; then
      missing+=("$prerequisite")
    fi
  done

  if [ ${#missing[@]} -gt 0 ]; then
    err "Missing prerequisites: ${missing[*]}"
    exit 1
  fi
}

parse_args() {
  while [[ $# -gt 0 ]]; do
    case $1 in
      -p|--path)
        shift
        ZKSTACKUP_PATH=$1
        ;;
      -l|--local)
        ZKSTACKUP_PATH="./"
        ;;
      -g|--global)
        LOCAL_DIR="/usr/local"
        BIN_DIR="$LOCAL_DIR/bin"
        ;;
      -r|--repo)
        shift
        ZKSTACKUP_REPO=$1
        ;;
      -b|--branch)
        shift
        ZKSTACKUP_BRANCH=$1
        ;;
      -c|--commit)
        shift
        ZKSTACKUP_COMMIT=$1
        ;;
      -v|--version)
        shift
        ZKSTACKUP_VERSION=$1
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      *)
        err "Unknown argument: $1"
        usage
        exit 1
        ;;
    esac
    shift
  done
}

usage() {
  cat <<EOF
Usage: $(basename "$0") [OPTIONS]

Options:
  -p, --path <path>         Install from a local path.
  -l, --local               Install from the current directory.
  -g, --global              Perform a global installation.
  -r, --repo <repo>         GitHub repository (default: "matter-labs/zksync-era").
  -b, --branch <branch>     Git branch to use.
  -c, --commit <commit>     Git commit hash to use.
  -v, --version <version>   Git tag to use.
  -h, --help                Show this help message.

Examples:
  $(basename "$0") --repo matter-labs/zksync-era --version 0.1.1
EOF
}

install_local() {
  if [ ! -d "$ZKSTACKUP_PATH/zkstack_cli" ]; then
    err "Directory $ZKSTACKUP_PATH does not contain zkstack_cli."
    exit 1
  fi

  say "Installing from local path: $ZKSTACKUP_PATH"
  cd "$ZKSTACKUP_PATH/zkstack_cli"

  for bin in "${BINS[@]}"; do
    ensure cargo install --root "$LOCAL_DIR" --path "./crates/$bin" --force
    chmod +x "$BIN_DIR/$bin"
  done
}

install_from_repo() {
  ZKSTACKUP_REPO=${ZKSTACKUP_REPO:-"matter-labs/zksync-era"}
  say "Installing from repository: $ZKSTACKUP_REPO"

  if [ -n "$ZKSTACKUP_VERSION" ]; then
    ensure cargo install --root "$LOCAL_DIR" --git "https://github.com/$ZKSTACKUP_REPO" --tag "zkstack_cli-v$ZKSTACKUP_VERSION" --locked --force
  elif [ -n "$ZKSTACKUP_COMMIT" ]; then
    ensure cargo install --root "$LOCAL_DIR" --git "https://github.com/$ZKSTACKUP_REPO" --rev "$ZKSTACKUP_COMMIT" --locked --force
  elif [ -n "$ZKSTACKUP_BRANCH" ]; then
    ensure cargo install --root "$LOCAL_DIR" --git "https://github.com/$ZKSTACKUP_REPO" --branch "$ZKSTACKUP_BRANCH" --locked --force
  else
    ensure cargo install --root "$LOCAL_DIR" --git "https://github.com/$ZKSTACKUP_REPO" --locked --force
  fi
}

add_bin_folder_to_path() {
  if [[ ":$PATH:" != *":$BIN_DIR:"* ]]; then
    local profile
    case $SHELL in
      */zsh) profile="${ZDOTDIR:-$HOME}/.zshrc" ;;
      */bash) profile="$HOME/.bashrc" ;;
      */fish) profile="$HOME/.config/fish/config.fish" ;;
      *) profile="$HOME/.profile" ;;
    esac

    if [ ! -f "$profile" ]; then
      touch "$profile"
    fi

    if [[ "$SHELL" == *"/fish"* ]]; then
      echo "fish_add_path $BIN_DIR" >> "$profile"
    else
      echo "export PATH=\"\$PATH:$BIN_DIR\"" >> "$profile"
    fi

    say "Added $BIN_DIR to PATH in $profile. Run 'source $profile' or start a new session."
  fi
}

ensure() {
  "$@" || {
    err "Command failed: $*"
    exit 1
  }
}

say() {
  echo -e "\033[1;32m$1\033[0m"
}

success() {
  echo -e "\033[1;32m$1\033[0m"
}

warn() {
  echo -e "\033[1;33mWARNING: $1\033[0m"
}

err() {
  echo -e "\033[1;31mERROR: $1\033[0m" >&2
}

display_banner() {
  echo "
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      ZK Stack Installer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  Comprehensive Toolkit for ZK Stack Chains
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
"
}

main "$@"
